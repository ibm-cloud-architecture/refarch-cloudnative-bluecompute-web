sudo: required
language: node_js
node_js:
- "6"
env:
  global:
    - IMAGE_NAME=bluecompute-web
    - RELEASE_NAME=web
    - TAG=travis-latest
stages:
  - local build and test
  - docker build, deploy, and test
  - kubernetes build, deploy, and test
jobs:
  include:
    - stage: local build and test
      before_script:
      # Go to source directory
      - cd StoreWebApp
      # Install dependencies
      - npm install
      # Install jshint to check for code linting
      - npm install -g jshint
      # Perform linting
      - jshint app.js
      - jshint routes/
      script:
      # Start Application
      - npm start &
      # Wait for the Web app to start accepting connections
      - sleep 10
      # Get back to root folder
      - cd ..
      # Run Web API Test
      - bash scripts/api_tests.sh 127.0.0.1 8000
    - stage: docker build, deploy, and test
      services:
      - docker
      script:
      # Build Docker image
      - docker build -t "${IMAGE_NAME}:${TAG}" .
      # Start Web Container and Connect to local MySQL Service
      - docker run --net=host --name web -d -p 8000:8000 "${IMAGE_NAME}:${TAG}"
      # Wait for the Web container to start accepting connections
      - sleep 10
      # Check that the Web container is running
      - docker ps
      # Check logs to see if it started properly
      - docker logs web
      # Run Web API Test
      - bash scripts/api_tests.sh 127.0.0.1 8000
    - stage: kubernetes build, deploy, and test
      services:
      - docker
      env:
      - CHANGE_MINIKUBE_NONE_USER=true
      before_script:
      # Install nsenter, which is needed for minikube to work
      - bash scripts/install_minikube_and_helm.sh
      script:
      # Build Docker image
      - docker build -t "${IMAGE_NAME}:${TAG}" .
      # helm lint
      - helm lint chart/web
      # helm package
      - helm package chart/web
      # helm install Web from packaged chart. Use pullPolicy=Never so it uses local docker image
      - CHART_VERSION="$(cat chart/web/Chart.yaml | grep version | awk '{print $2}')"
      - helm install --set image.repository=${IMAGE_NAME} --set image.tag=${TAG} --set image.pullPolicy=Never --name web ./chart/web
      # Wait for Web to be ready
      - kubectl get deployments ${RELEASE_NAME}-web -o yaml
      - READY=$(kubectl get deployments ${RELEASE_NAME}-web -o yaml | grep "readyReplicas" | awk '{print $2}')
      - echo $READY
      - until [ -n "$READY" ] && [ ${READY} -ge 1 ]; do READY=$(kubectl get deployments ${RELEASE_NAME}-web -o yaml | grep "readyReplicas" | awk '{print $2}'); kubectl get deployments -o wide; echo "Waiting for web to be ready"; sleep 10; done
      # Wait for Web deployment to start accepting connections
      - sleep 10
      # Run Web API Test
      - MINIKUBE_IP=$(minikube ip)
      - NODE_PORT=$(kubectl get service ${RELEASE_NAME}-web -o=jsonpath='{.spec.ports[0].nodePort}')
      - bash scripts/api_tests.sh $MINIKUBE_IP $NODE_PORT $HS256_KEY
